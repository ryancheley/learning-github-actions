name: Issue Cleanup and Analytics

run-name: ${{ github.actor }} closed an issue - running cleanup

on:
  issues:
    types: [closed]

permissions:
  issues: write

jobs:
  cleanup-and-track:
    runs-on: ubuntu-latest
    steps:
      - name: Remove in-progress labels
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labelsToRemove = ['in-progress', 'needs-review', 'waiting-for-response'];
            
            for (const labelName of labelsToRemove) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: labelName
                });
                console.log(`Removed label: ${labelName}`);
              } catch (error) {
                console.log(`Label ${labelName} not found or already removed`);
              }
            }

      - name: Track resolution analytics
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const createdAt = new Date(issue.created_at);
            const closedAt = new Date(issue.closed_at);
            const resolutionTimeHours = Math.round((closedAt - createdAt) / (1000 * 60 * 60));
            
            const issueLabels = issue.labels.map(l => l.name).join(', ') || 'Unlabeled';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `## ðŸ“Š Issue Analytics\n\n**Resolution Time:** ${resolutionTimeHours} hours\n**Issue Type:** ${issueLabels}\n**Closed by:** @${context.actor}\n**Created by:** @${issue.user.login}\n\n*This comment helps track project metrics and can be used for reporting.*`
            });

      - name: Notify if critical issue resolved
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const isCritical = issue.labels.some(label => 
              ['critical', 'urgent', 'security', 'bug'].includes(label.name.toLowerCase())
            );
            
            if (isCritical) {
              console.log(`ðŸš¨ Critical issue resolved: ${issue.title}`);
              console.log(`Issue #${issue.number} was marked as critical and has been resolved.`);
              console.log(`Consider notifying stakeholders or updating status pages.`);
            }