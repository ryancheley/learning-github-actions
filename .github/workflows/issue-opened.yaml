name: Auto-triage and Welcome New Issues

run-name: ${{ github.actor }} opened an issue - auto-triaging

on:
    issues:
        types: [opened]

permissions:
    issues: write

jobs:
    auto-triage:
        runs-on: ubuntu-latest
        steps:
            - name: Add triage label
              uses: actions/github-script@v7
              with:
                script: |
                  const issue = context.payload.issue;
                  const title = issue.title.toLowerCase();
                  const body = issue.body?.toLowerCase() || '';
                  
                  let labels = ['needs-triage'];
                  
                  // Auto-detect issue type based on keywords
                  if (title.includes('bug') || body.includes('error') || body.includes('crash')) {
                    labels.push('bug');
                  } else if (title.includes('feature') || title.includes('enhancement') || body.includes('feature request')) {
                    labels.push('enhancement');
                  } else if (title.includes('question') || title.includes('help') || body.includes('how do')) {
                    labels.push('question');
                  }
                  
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    labels: labels
                  });

            - name: Welcome first-time contributors
              uses: actions/github-script@v7
              with:
                script: |
                  const issue = context.payload.issue;
                  
                  // Check if this is the user's first issue
                  const { data: userIssues } = await github.rest.issues.listForRepo({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    creator: issue.user.login,
                    state: 'all'
                  });
                  
                  if (userIssues.length === 1) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      body: `ðŸ‘‹ Thanks for opening your first issue @${issue.user.login}!\n\nWe appreciate your contribution to the project. A maintainer will review this shortly.\n\n**Helpful resources:**\n- [Contributing Guidelines](../CONTRIBUTING.md)\n- [Code of Conduct](../CODE_OF_CONDUCT.md)\n- [Project Documentation](../README.md)`
                    });
                  }