name: Team Routing and Notifications

run-name: ${{ github.actor }} labeled an issue - routing to teams

on:
    issues:
        types: [labeled]

permissions:
    issues: write

jobs:
    route-and-notify:
        runs-on: ubuntu-latest
        steps:
            - name: Route to appropriate team
              uses: actions/github-script@v7
              with:
                script: |
                  const issue = context.payload.issue;
                  const labelName = context.payload.label.name.toLowerCase();
                  
                  let teamAssignments = {
                    'security': '@security-team',
                    'performance': '@performance-team', 
                    'ui/ux': '@design-team',
                    'api': '@backend-team',
                    'frontend': '@frontend-team',
                    'documentation': '@docs-team',
                    'critical': '@on-call-team',
                    'urgent': '@triage-team'
                  };
                  
                  const assignedTeam = teamAssignments[labelName];
                  
                  if (assignedTeam) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      body: `üè∑Ô∏è **Issue routed to ${assignedTeam}**\n\nThis issue has been labeled as "${context.payload.label.name}" and has been routed to the appropriate team.\n\n**Team:** ${assignedTeam}\n**Priority:** ${labelName.includes('critical') || labelName.includes('urgent') ? 'üî¥ High' : 'üü° Normal'}\n**Expected Response Time:** ${labelName.includes('critical') ? '2 hours' : labelName.includes('urgent') ? '1 business day' : '3 business days'}`
                    });
                  }

            - name: Set SLA timers for priority labels
              uses: actions/github-script@v7
              with:
                script: |
                  const labelName = context.payload.label.name.toLowerCase();
                  const issue = context.payload.issue;
                  
                  const slaInfo = {
                    'critical': { hours: 2, emoji: 'üö®' },
                    'urgent': { hours: 24, emoji: '‚ö°' },
                    'high': { hours: 72, emoji: 'üî¥' },
                    'security': { hours: 4, emoji: 'üîí' }
                  };
                  
                  const sla = slaInfo[labelName];
                  
                  if (sla) {
                    const dueDate = new Date();
                    dueDate.setHours(dueDate.getHours() + sla.hours);
                    
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      body: `${sla.emoji} **SLA Timer Started**\n\n**Priority Level:** ${labelName.toUpperCase()}\n**Response Due:** ${dueDate.toLocaleString()}\n**SLA:** ${sla.hours} hours\n\nThis issue requires attention within the specified timeframe. The team has been notified.`
                    });
                  }

            - name: Trigger external integrations
              uses: actions/github-script@v7
              with:
                script: |
                  const labelName = context.payload.label.name.toLowerCase();
                  const issue = context.payload.issue;
                  
                  // Simulate external integrations (replace with actual webhook calls)
                  if (labelName === 'security') {
                    console.log('üîî Would send Slack notification to #security-alerts');
                    console.log('üîî Would create PagerDuty incident');
                  }
                  
                  if (labelName === 'critical' || labelName === 'urgent') {
                    console.log('üîî Would send email to on-call team');
                    console.log('üîî Would update status page');
                  }
                  
                  if (labelName === 'customer-reported') {
                    console.log('üîî Would sync with customer support system');
                    console.log('üîî Would notify account manager');
                  }
                  
                  console.log(`Integration triggers processed for label: ${labelName}`);